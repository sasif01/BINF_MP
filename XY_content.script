import csv
import os 
import re 
import sys 
from sys import argv 
from decimal import Decimal

###INSTRUCTIONS FOR RUNNING SCRIPT####

#Purpose: Determine the AC, GC, AG content of fragments from the referance genome (located in folders inside 5_conserved_seqs/).

#Running the script: The script is run from command line. The script takes 1 command line arguments (the fragmented referance genome in 5_conserved_seqs).

#General format : python3 XY_content.script frag_ref The user will be prompted to specify what base content they want to get (ie, GC or AC or AG)

###GC/AC/AG Conent###
# Fragmented referance genome (located in folders within 5_conserved_seqs/) 
cons=open(sys.argv[1], 'r').readlines()

# Extracting the scores and names from the file name (in command line argument 1)
name_list=sys.argv[1].split('/')[-1].split('_')
# length of fragment (which is in the name of the file)
frag=name_list[-1]
scores=name_list[-2]

#### USER INPUT ####
X=input('Specify AC,GC,AG?: ')


# dictionary that holds the XY content, as well as the average stability score for the fragment
dict={}

# Getting the XY content for each fragment as well as the averaged stability score (found in header for each fragment)
for index, line in  enumerate(cons):
	if (line.startswith('>')):
		header=cons[index]
		pos=header.split(' ')[1]
		seq=cons[index+1]
		A=seq.count(X[0])
		B=seq.count(X[1])
		AB=(A+B)/len(seq)
		dict[pos]=[AB]

header=['position',X+'_score']

# Holds the loction of each fragment (location relative to the referance)
pos=[]
# Holds the XY content for fragment
bp=[]
for i in dict.keys():
	pos.append(i)
	bp.append(dict[i][0])

# Joining the three lists togather
data=zip(pos, bp)

# Writing the XY contene, fragment location (relative to referance) and averaged stability score to a tsv file
with open(str(X)+'_'+frag, 'w', newline='') as f_output:		
	tsv_output = csv.writer(f_output, delimiter='\t')
	tsv_output.writerow(header)
	for p, b in data:
		tsv_output.writerow([p, b])



			
